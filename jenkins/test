#!/usr/bin/env groovy

pipeline {
    environment {
        PYTHONUNBUFFERED = 'yes'
        GITHUB_OAUTH_TOKEN = credentials('okonomiyaki-github-credentials')
    }
    parameters {
        string(name: 'builder', defaultValue: 'rh6 && 64bit')
        string(name: 'name', defaultValue: 'rh6')
        string(name: 'commit', defaultValue: 'master')
    }
    options {
        timeout(activity: true, time: 10)
        timestamps()
        buildDiscarder(logRotator(daysToKeepStr: '7', artifactDaysToKeepStr: '7'))
        skipDefaultCheckout()
    }
    agent { node { label "${params.builder}" } }
    stages {
        stage('Start') {
            steps {
                githubNotify(
                    [
                        status: 'PENDING',
                        description: 'Jenkins build started',
                        account: 'enthought',
                        context: 'CI/jenkins/' + "${params.name}",
                        credentialsId: 'okonomiyaki-github-credentials',
                        sha: "${params.commit}",
                        repo: 'okonomiyaki'
                    ]
                )
            }
        }
        stage('checkout') {
            steps {
                deleteDir()
                git credentialsId: 'okonomiyaki-github-credentials', url: 'https://github.com/enthought/okonomiyaki'

                execute "git clean -xdf"
                execute "git checkout ${params.commit}"
                execute "git log -2"
            }
        }
        stage('setup') {
            steps {
                execute "edm envs create okonomiyaki-dev --force"
                execute "edm install -e okonomiyaki-dev -y haas mock testfixtures"
                execute "edm run -e okonomiyaki-dev -- pip install -e ."
            }
        }

        stage('test') {
            steps {
                execute "edm run -e okonomiyaki-dev -- haas -v okonomiyaki"
            }
        }
    }

    post {
        always {
            echo 'One way or another, I have finished'
        }
        success {
            githubNotify([
                status: 'SUCCESS',
                description: 'Jenkins build passed',
                account: 'enthought',
                context: 'jenkins/' + "${params.name}",
                credentialsId: 'okonomiyaki-github-credentials',
                sha: "${params.commit}",
                repo: 'okonomiyaki'
            ])
        }
        unstable {
            githubNotify([
                status: 'ERROR',
                description: 'Jenkins build finished',
                account: 'enthought',
                context: 'jenkins/' + "${params.name}",
                credentialsId: 'okonomiyaki-github-credentials',
                sha: "${params.commit}",
                repo: 'okonomiyaki'
            ])
        }
        failure {
            githubNotify([
                status: 'FAILURE',
                description: 'Jenkins build failed',
                account: 'enthought',
                context: 'jenkins/' + "${params.name}",
                credentialsId: 'okonomiyaki-github-credentials',
                sha: "${params.commit}",
                repo: 'okonomiyaki'
            ])
        }
    }
}


def execute(command) {
    if (isUnix()) {
       sh command
    } else {
       def cleaned = command.replace('\'','\"')
       bat cleaned
    }
}
